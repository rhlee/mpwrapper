#!/usr/bin/env python

import sys
import os
import subprocess
import re
import io
import binascii
import pygtk
pygtk.require('2.0')
import gtk


class MpwrapperWindow:
  _resume = True
  
  def getResume(self):
    return self._resume

  def resumeHandler(self, widget, data=None):
    gtk.main_quit()

  def startHandler(self, widget, data=None):
    self._resume = False
    gtk.main_quit()

  def destroy(self, widget, data=None):
    gtk.main_quit()
    
  def __init__(self):
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    self.window.connect("destroy", self.destroy)
    self.window.set_border_width(20)
    self.resumeButton = gtk.Button("Resume")
    self.resumeButton.connect("clicked", self.resumeHandler, None)
    self.startButton = gtk.Button("Play from start")
    self.startButton.connect("clicked", self.startHandler, None)
    self.box = gtk.VBox(False, 20)
    self.box.pack_start(self.resumeButton, False, False, 0)
    self.resumeButton.show()
    self.box.pack_start(self.startButton, False, False, 0)
    self.startButton.show()
    self.window.add(self.box)
    self.box.show()
    self.window.set_decorated(False)
    self.window.set_position(gtk.WIN_POS_CENTER)
    self.window.set_keep_above(True)
    self.window.show()
  
  def main(self):
    gtk.main()


def main(args):
  #sys.stderr = sys.stdout = open(os.path.expanduser("~/.mpwrapper.log"), 'w')
  
  if len(args) == 1:
    print "Error: no argument(s)"
    exit(1)

  arg = args[1]

  mpwPath = os.path.expanduser("~/.mpwrapper")
  if not os.path.isdir(mpwPath):
    os.mkdir(mpwPath)

  id = "%08x" % (binascii.crc32(arg) & 0xffffffff)
  
  mpwrapperWindow = MpwrapperWindow()
  mpwrapperWindow.main()

  mpCommand = "mplayer -v -vf eq2 -fs"

  ps = subprocess.Popen(mpCommand.split(' ') + [arg],
    stdout=subprocess.PIPE, stderr=subprocess.STDOUT,
    universal_newlines = True)

  posRe = re.compile('^A:\s*([^\s]+)\s*')
  for line in ps.stdout:
    line = line.rstrip('\n')
    posMatch = posRe.match(line)
    if posMatch:
      pos = posMatch.group(1)

  posFile = open(os.path.join(mpwPath, id), 'w')
  posFile.write(pos)


if __name__ == "__main__":
  main(sys.argv)
